@page
@model HomeAPI.Pages.LightsModel
@{
    ViewData["Title"] = "Lights";
}

<script type="text/javascript">
    function updateBrightness(id, val)
    {
        val = val * 2.54;
        //document.getElementById("valBox").innerHTML = id + " " + val;
        $.ajax('api/lights/' + id + '/brightness/' + val, { method: 'PUT' });
    }

    function toggleLight(id)
    {
        $.ajax('api/lights/' + id + '/toggle', { method: 'PUT' });
        setTimeout(function () { location.reload(true) }, 500);//kinda shitty but it works
    }
</script>
<div>
    <h2>Light Controller</h2>
    @for (int i = 0; i < Model.Lights.Count; i++)
    {
        var light = Model.Lights[i];

        if (!light.State.Reachable)
        {
            continue;
        }

        string color = light.State.On ? "lightyellow" : "lightgray";

        <div id="light" style="width:100px;height:100px;text-align:center;float:left;border:1px solid black;border-radius:15px;padding:15px;
                background-color:@color"
             onclick="toggleLight(@light.ID)">
            <span>@light.Name</span>
            @if (light.State.On)
            {
                double briScaled = Math.Round(light.State.Bri / 2.54, 0);
                <input type="range" min="0" max="100" step="10" value="@briScaled" oninput="updateBrightness(@light.ID, this.value)" onclick="event.cancelBubble = true;"/>
            }
        </div>
    }
</div>
<br style="clear:left" />