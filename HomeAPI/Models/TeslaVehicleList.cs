// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using HomeApi.Models;
//
//    var teslaVehicleList = TeslaVehicleList.FromJson(jsonString);

namespace HomeAPI.Models
{
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TeslaVehicleListResponse
    {
        [JsonProperty("response")]
        public TeslaVehicle[] Vehicles { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class TeslaVehicle
    {
        [JsonProperty("id")]
        public double Id { get; set; }

        [JsonProperty("vehicle_id")]
        public long VehicleId { get; set; }

        [JsonProperty("vin")]
        public string Vin { get; set; }

        [JsonProperty("display_name")]
        public string DisplayName { get; set; }

        [JsonProperty("option_codes")]
        public string OptionCodes { get; set; }

        [JsonProperty("color")]
        public object Color { get; set; }

        [JsonProperty("tokens")]
        public string[] Tokens { get; set; }

        [JsonProperty("state")]
        public string State { get; set; }

        [JsonProperty("in_service")]
        public bool InService { get; set; }

        [JsonProperty("id_s")]
        public string IdS { get; set; }

        [JsonProperty("calendar_enabled")]
        public bool CalendarEnabled { get; set; }

        [JsonProperty("api_version")]
        public long ApiVersion { get; set; }

        [JsonProperty("backseat_token")]
        public object BackseatToken { get; set; }

        [JsonProperty("backseat_token_updated_at")]
        public object BackseatTokenUpdatedAt { get; set; }
    }

    public partial class TeslaVehicleListResponse
    {
        public static TeslaVehicleListResponse FromJson(string json) => JsonConvert.DeserializeObject<TeslaVehicleListResponse>(json, HomeAPI.Models.Converter.Settings);
        public static string ToJson(TeslaVehicleListResponse vehicleList) => JsonConvert.SerializeObject(vehicleList, HomeAPI.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
